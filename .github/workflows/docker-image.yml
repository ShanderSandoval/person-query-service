name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "."
          target: "~/${{ secrets.DEPLOY_DIRECTORY }}" # Variable para el directorio en EC2

      - name: Install Docker and Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "ðŸ“Œ Verificando e instalando Docker en EC2..."
            
            # Desinstalar containerd si causa conflictos
            sudo apt-get remove -y containerd || true
            
            # Instalar Docker CE de manera segura
            sudo apt-get update -y
            sudo apt-get install -y ca-certificates curl gnupg lsb-release
            
            # Agregar la clave GPG de Docker
            sudo mkdir -m 0755 -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
            sudo chmod a+r /etc/apt/keyrings/docker.asc
            
            # Agregar el repositorio de Docker
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            
            # Instalar Docker CE
            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            
            # Verificar instalaciÃ³n de Docker
            docker --version
            
            echo "ðŸ“Œ Docker instalado con Ã©xito."

            # Construir la imagen Docker
            cd ~/${{ secrets.DEPLOY_DIRECTORY }}
            docker build -t ${{ secrets.CONTAINER_IMAGE_NAME }} .

            # Detener y eliminar contenedor anterior (si existe)
            docker stop ${{ secrets.CONTAINER_NAME }} || true
            docker rm ${{ secrets.CONTAINER_NAME }} || true

            # Desplegar el nuevo contenedor
            docker run -d --name ${{ secrets.CONTAINER_NAME }} -p 80:80 ${{ secrets.CONTAINER_IMAGE_NAME }}
